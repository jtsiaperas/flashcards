{"version":3,"sources":["registerServiceWorker.js","App.js","history.js","utils/API.js","components/flashcards/flashcards.js","components/admin/admin.js","index.js","routes.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","App","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","route","history","replace","concat","auth","login","logout","react_default","a","createElement","className","Component","createHistory","instance","axios","create","apiURL","process","API_URL","API","get","card","post","FlashCards","_this","flashcards","bins","selected","_this2","cards","setState","data","bin","index","$","css","i","length","Date","now","lastViewed","_this3","getCard","id","hint","answer","onClick","wasWrong","showAnswer","wasRight","React","Admin","event","preventDefault","form","document","forms","value","result","alert","name","action","method","onSubmit","handlesubmit","htmlFor","type","routes","Router","component","Route","path","render","src_App_0","exact","admin_admin","flashcards_flashcards","ReactDOM","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ff9201ae.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) \r\n  {\r\n    super(props);\r\n  }\r\n  \r\n    \r\n    goTo(route) {\r\n      this.props.history.replace(`/${route}`)\r\n    }\r\n    login() {\r\n      this.props.auth.login();\r\n    }\r\n  \r\n    logout() {\r\n      this.props.auth.logout();\r\n    }\r\n  \r\n  \r\n    render() {\r\n     return(\r\n      <div className=\"container\">\r\n      <div className=\"navbar\">\r\n        \r\n      </div>\r\n    \r\n      \r\n      </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import createHistory from 'history/createBrowserHistory'\r\n\r\nexport default createHistory()","import axios from \"axios\";\r\n\r\nvar instance = axios.create({});\r\nvar apiURL = process.env.API_URL || \"http://localhost:3001\";\r\n\r\n\r\nexport default {\r\n  // Gets all flashcards\r\n  getFlashCards: () => {\r\n    return instance.get(`${apiURL}/api/flashcards`);\r\n  },\r\n  // saves flashcard\r\n  saveFlashCard: (card) =>{\r\n    return instance.post(`${apiURL}/api/flashcard/`,card);\r\n  }\r\n};","import React from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport \"./flashcards.css\";\r\nimport $ from \"jquery\";\r\n\r\nclass FlashCards extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            flashcards: [],\r\n            bins: [0,5,25,120,600,3600,18000,86400,432000],\r\n            selected:{}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        API.getFlashCards().then(cards =>{\r\n            console.log(cards);\r\n            this.setState({flashcards:cards.data});\r\n        });\r\n    }\r\n\r\n    wasWrong(card){\r\n        \r\n        let cards = this.state.flashcards;\r\n        card.bin = 1;\r\n        cards[card.index] = card;\r\n        this.setState({flashcards: cards});\r\n        $(\"#right\").css(\"opacity\",0);\r\n        $(\"#answer\").css(\"opacity\",0.0);\r\n        $(\"#wrong\").css(\"opacity\",0.0);\r\n        $(\"#show\").css(\"opacity\",1);\r\n    }\r\n\r\n    wasRight(card){\r\n        let cards = this.state.flashcards;\r\n        card.bin++;\r\n        cards[card.index] = card;\r\n        this.setState({flashcards: cards});\r\n        $(\"#right\").css(\"opacity\",0);\r\n        $(\"#answer\").css(\"opacity\",0.0);\r\n        $(\"#wrong\").css(\"opacity\",0.0);\r\n        $(\"#show\").css(\"opacity\",1);\r\n    }\r\n\r\n    showAnswer(){\r\n        $(\"#right\").css(\"opacity\",1.0);\r\n        $(\"#answer\").css(\"opacity\",1.0);\r\n        $(\"#wrong\").css(\"opacity\",1.0);\r\n        $(\"#show\").css(\"opacity\",0);\r\n    }\r\n    \r\n    getCard(cards){\r\n        if (cards){\r\n            for(let i=0; i<cards.length; i++)\r\n            {\r\n            \r\n                if (cards[i].bin === 0)\r\n                {\r\n                    cards[i].index = i;\r\n                    return cards[i];\r\n                }\r\n                console.log(Date.now()-cards[i].lastViewed);\r\n                if((Date.now()-cards[i].lastViewed) /1000 >= this.state.bins[i])\r\n                {\r\n                    cards[i].index = i;\r\n                    return cards[i];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let card = this.getCard(this.state.flashcards);\r\n       \r\n        return(\r\n            <div id=\"flashcard\">\r\n                <div id=\"hint\">\r\n                    { card ? (card.hint):(\"\")}\r\n                </div>\r\n                <div id=\"answer\">\r\n                    { card ? (card.answer):(\"\")}\r\n                </div>\r\n                { card ? (\r\n                <div>\r\n                    <button className=\"button\" id=\"wrong\" onClick={()=>this.wasWrong(card)}>Wrong</button>\r\n                    <button className=\"button\" id=\"show\" onClick={this.showAnswer}>Show Answer</button>\r\n                    <button className=\"button\" id=\"right\" onClick={()=>this.wasRight(card)}>Right</button>\r\n                </div>\r\n                ):(<div>You're out of cards to view</div>)}  \r\n            </div>     \r\n        )\r\n        }\r\n    \r\n};\r\n\r\nexport default FlashCards;","import React from \"react\";\r\nimport \"./admin.css\";\r\nimport API from \"../../utils/API\";\r\n\r\nclass Admin extends React.Component {\r\n\r\nconstructor(props)\r\n{\r\n    super(props);\r\n}\r\n\r\nhandlesubmit(event){\r\n    event.preventDefault();\r\n    let card = {};\r\n    let form = document.forms[\"newCard\"];\r\n    card.hint = form.hint.value;\r\n    card.answer = form.answer.value;\r\n    console.log(card);\r\n    API.saveFlashCard(card)\r\n    .then(result =>{\r\n        alert(\"flashcard created!\");\r\n        console.log(result);\r\n        form.hint.value =\"\";\r\n        form.answer.value = \"\";\r\n    });\r\n}\r\nrender(){\r\n return(\r\n    <div className=\"card\">\r\n        <form name=\"newCard\" id=\"newCard\" action=\"api/flashcard\" method =\"post\" onSubmit={this.handlesubmit}>\r\n            <label htmlFor=\"hint\">Hint</label>\r\n            <input type=\"text\"  name=\"hint\"></input>\r\n            <label htmlFor=\"answer\">Answer</label>\r\n            <input type=\"text\"  name=\"answer\"></input>\r\n            <input type=\"submit\" />\r\n        </form>\r\n    </div>\r\n  \r\n )\r\n}\r\n\r\n}\r\n\r\nexport default Admin;","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport { makeMainRoutes } from './routes';\r\n\r\n\r\nconst routes = makeMainRoutes();\r\n\r\nReactDOM.render(routes, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n","import React from 'react';\r\nimport { Route, Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport history from './history';\r\nimport FlashCards from './components/flashcards';\r\nimport Admin from './components/admin';\r\n\r\nexport const makeMainRoutes = () => {\r\n  \r\n  return (\r\n    <Router history={history} component={App}>\r\n      <div>\r\n       \r\n        <Route path=\"/\" render={(props) => <App {...props} />} />\r\n        <Route exact path=\"/admin\" render={(props) => {\r\n              \r\n              return (\r\n                \r\n                  <div id=\"admin\">\r\n                    <Admin {...props}/>\r\n                  </div>\r\n               \r\n              )\r\n            } \r\n          \r\n          }/>\r\n          <Route exact path=\"/flashcards\" render ={(props)=>{\r\n            \r\n            \r\n              return (\r\n                <div id=\"flashcards\">\r\n                <FlashCards {...props} />\r\n                </div>\r\n              )\r\n          }} />\r\n  \r\n      </div>\r\n    </Router>\r\n  );\r\n}"],"sourceRoot":""}